name: Build Release - Windows

on:
    workflow_dispatch:
        inputs:
            baseurl:
                description: 'Define website url'
                required: true
                default: 'https://cp.trttechnologies.net'
            version:
                description: 'Define API version'
                required: true
                default: 'wc/v3'
            consumerkey:
                description: 'Define consumer key'
                required: true
            consumersecret:
                description: 'Define consumer secret'
                required: true

jobs:
    build-windows-release:
        runs-on: windows-latest
        env:
            baseurl: ${{ github.event.inputs.baseurl }}
            version: ${{ github.event.inputs.version }}
            consumerkey: ${{ github.event.inputs.consumerkey }}
            consumersecret: ${{ github.event.inputs.consumersecret }}
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Install Flutter
              uses: subosito/flutter-action@v2
              with:
                  channel: stable

            - name: Disable Analytics & Enable Windows Builds
              shell: pwsh
              run: |
                  flutter config --no-analytics
                  flutter config --enable-windows-desktop
                  flutter --version

            - name: Cache Flutter dependencies
              uses: actions/cache@v4
              with:
                  path: ${{ env.PUB_CACHE }}
                  key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-pub-

            - name: Install Flutter Dependencies
              run: flutter pub get

            - name: Build Windows
              run: flutter build windows --dart-define=BASE_URL=${{ env.baseurl }} --dart-define=CONSUMER_KEY=${{ env.consumerkey }} --dart-define=CONSUMER_SECRET=${{ env.consumersecret }} --dart-define=VERSION=${{ env.version }} --release

            - name: Upload Windows build
              uses: actions/upload-artifact@v4
              with:
                  name: windows-portable-x64
                  path: build/windows/x64/runner/Release/

            - name: Download and Install Inno Setup
              shell: powershell
              run: |
                  Invoke-WebRequest -Uri https://jrsoftware.org/download.php/is.exe -OutFile is.exe
                  Start-Process is.exe -ArgumentList '/VERYSILENT' -Wait

            - name: Prepare Icon File
              shell: powershell
              run: |
                  $iconSource = "$env:GITHUB_WORKSPACE/assets/icon/icon.ico"
                  $iconTarget = "$env:GITHUB_WORKSPACE/build/icon.ico"
                  if (Test-Path $iconSource) {
                      Copy-Item -Path $iconSource -Destination $iconTarget
                  } else {
                      Write-Error "Icon file not found: $iconSource"
                  }

            - name: Create Inno Setup Script
              shell: powershell
              run: |
                  $scriptPath = "$env:GITHUB_WORKSPACE/build_script.iss"
                  Set-Content -Path $scriptPath -Value @"
                  ; Inno Setup Script
                  #define MyAppName "TRTOrderManager"
                  ;#define MyAppVersion "$env:VERSION"
                  #define MyAppPublisher "trttech.ca"
                  #define MyAppURL "https://trttech.ca"

                  ; the flutter executable exe name
                  #define MyAppExeName "pdf_printer.exe"

                  [Setup]
                  ;AppId={{5960F34D-1E42-402C-8C85-DE2FF24CBAE4}
                  AppName={#MyAppName}
                  AppVersion=1.0.0
                  AppPublisher={#MyAppPublisher}
                  AppPublisherURL={#MyAppURL}
                  AppSupportURL={#MyAppURL}
                  DefaultDirName={autopf}\trtordermanager
                  DisableProgramGroupPage=yes
                  OutputDir=build\installer
                  OutputBaseFilename=TrtInstaller
                  PrivilegesRequired=lowest
                  SetupIconFile=build\icon.ico
                  Compression=lzma
                  SolidCompression=yes
                  WizardStyle=modern
                  LanguageDetectionMethod=uilanguage

                  [Languages]
                  Name: "english"; MessagesFile: "compiler:Default.isl"

                  [Tasks]
                  Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked

                  [Files]
                  Source: "build\windows\x64\runner\Release\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs
                  ; NOTE: Don't use "Flags: ignoreversion" on any shared system files


                  [UninstallDelete]
                  Type: filesandordirs; Name: "{app}"

                  [Icons]
                  Name: "{autoprograms}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
                  Name: "{autodesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon

                  [Run]
                  Filename: "{app}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: nowait postinstall skipifsilent
                  "@

            - name: Run Inno Setup Compiler
              shell: powershell
              run: |
                  &"C:\\Program Files (x86)\\Inno Setup 6\\ISCC.exe" build_script.iss

            - name: Upload Installer
              uses: actions/upload-artifact@v4
              with:
                  name: windows-installer-x64
                  path: build/installer/*.exe
